class Solution 
{
public:
    bool checkIfExist(vector<int>& arr) 
    {
        // naive implementation -> brute force approach
        for(int i=0; i<arr.size()-1; i++)
        {
            for(int j=i+1; j<arr.size(); j++)
            {
                if(arr[i] == 2 * arr[j] || arr[j] == 2 * arr[i]) return true;
            }
        }
        return false;
    }
};
// TIME COMPLEXITY O(N^2)
// SPACE COMPLEXITY O(1)


class Solution
{
    public:
    bool checkIfExist(vector<int>& arr)
    {
        unordered_set<int> mp; // O(1)
        for(int i = 0; i< arr.size(); i++)
        {
            if(mp.find(2 * arr[i]) != mp.end()) return true;
            else 
            { 
                if(arr[i] % 2 == 0 && mp.find(arr[i]/2) != mp.end()) return true; 
            }
            mp.insert(arr[i]);
        }
        return false;
    }
};

// TIME COMPLEXITY O(Log N)
// SPACE COMPLEXITY O(N)

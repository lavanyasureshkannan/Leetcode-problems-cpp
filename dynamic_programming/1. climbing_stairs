70. Climbing Stairs

# brute force method - time limit exceed (works till n = 41)
class Solution {
public:
    int climbStairs(int n) {
        int result = 0;
        if (n <2 )
            result = 1;
        else{
            result = climbStairs(n - 1) + climbStairs(n - 2);
        }
        return result;
    }
};

#memozation
class Solution {
public:
    int memo[46];
    int climbStairs(int n){
        if (n <= 1) return 1;
        memset(memo, -1, sizeof(memo));
        return solve(n);
        
    }
    int solve(int n) {
        if(n <= 1)
            return 1;
        if(memo[n] != -1)
            return memo[n];
        return memo[n] = solve(n -1) + solve(n -2);
        }
};

# classic approach
class Solution {
public:
    int climbStairs(int n) {
        int a = 1;
        int b = 1;
        int c;
        for(int i = 0; i < (n-1); i++){
            c = a + b;
            a = b;
            b = c;
        }
        return c;
        
    }
};
